{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d2220\\\\PycharmProjects\\\\lectures-collection-bot\\\\admin_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CategoryList from './components/CategoryList';\nimport CategoryEditor from './components/CategoryEditor';\nimport styles from './components/styles/App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_CATEGORY_LEVELS = 6;\nconst MAX_CAT_NAME_LENGTH_FOR_GEN = 127;\nfunction App() {\n  _s();\n  const [categories, setCategories] = useState([{\n    id: 1,\n    name: 'Category 1',\n    subcategories: []\n  }, {\n    id: 2,\n    name: 'Category 2',\n    subcategories: []\n  }, {\n    id: 3,\n    name: 'Category 3',\n    subcategories: []\n  }]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  useEffect(() => {\n    // Здесь будет загрузка данных с сервера (пока используем заглушку)\n    // В будущем заменим на реальный fetch запрос\n  }, []);\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n  };\n  const handleSaveCategory = updatedCategory => {\n    const updateCategoriesRecursively = cats => {\n      return cats.map(cat => {\n        if (cat.id === updatedCategory.id) {\n          return updatedCategory; // Меняю старую категорию на обновлённую\n        }\n        if (cat.subcategories && cat.subcategories.length > 0) {\n          return {\n            ...cat,\n            subcategories: updateCategoriesRecursively(cat.subcategories)\n          }; // Если у текущей категории уже есть подкатегории, рекурсивно вызываем для них\n        }\n        return cat;\n      });\n    };\n    setCategories(updateCategoriesRecursively(categories)); // Обновляем сост.\n\n    // Сбрасываем выбранную категорию, чтобы скрыть редактор\n    setSelectedCategory(null);\n\n    // TODO: Отправить обновленные данные на сервер (PUT/PATCH запрос)\n    console.log('Updated category:', updatedCategory); // Для отладки\n  };\n  const handleCancelEdit = () => {\n    setSelectedCategory(null); // Скрываем редактор, отмена редактирования\n  };\n  const handleAddSubcategory = parentCategory => {\n    // Генератор ID\n    const generateId = () => Date.now();\n\n    // Функция генерирования имени для новой (под)категории\n    const generateSubcategoryName = (parent, existingSubcategories) => {\n      const nextNumber = existingSubcategories.length + 1;\n      let baseName;\n      if (parent === null) {\n        let maxTopLevelNum = 0;\n        categories.forEach(cat => {\n          // Проверка совпадает ли имя формату \"Category[число]\"\n          const match = cat.name.match(/^Category (\\d+)$/);\n          if (match) {\n            maxTopLevelNum = Math.max(maxTopLevelNum, parseInt(match[1], 10));\n          }\n        });\n        baseName = `Category ${maxTopLevelNum + 1}`;\n      } else {\n        const parentNamePart = parent.name.slice(0, MAX_CAT_NAME_LENGTH_FOR_GEN - 10);\n        baseName = `${parentNamePart}.${nextNumber}`;\n      }\n      return baseName.slice(0, MAX_CAT_NAME_LENGTH_FOR_GEN);\n    };\n    const newSubcategory = {\n      id: generateId(),\n      name: generateSubcategoryName(parentCategory, parentCategory ? parentCategory.subcategories : categories),\n      subcategories: []\n    };\n\n    // Функция рекурсивного обновления состояния категорий\n    const updateCategoriesRecursively = (cats, parentId) => {\n      if (parentId === null) {\n        return [...cats, newSubcategory];\n      }\n      return cats.map(cat => {\n        // Ищем род. категорию\n        if (cat.id === parentId) {\n          // Нашли род. категорию\n          return {\n            ...cat,\n            subcategories: [...cat.subcategories, newSubcategory]\n          };\n        } else if (cat.subcategories && cat.subcategories.length > 0) {\n          // Если есть подкатегории, рекурсивно ищем в них\n          return {\n            ...cat,\n            subcategories: updateCategoriesRecursively(cat.subcategories, parentId)\n          };\n        }\n        return cat;\n      });\n    };\n    if (parentCategory === null) {\n      // если нет ParentCategory, значит добавляем на top-level\n      setCategories(updateCategoriesRecursively(categories, null));\n    } else {\n      // иначе, добавляем как подкатегорию\n      setCategories(updateCategoriesRecursively(categories, parentCategory.id));\n    }\n  };\n\n  // Удаление категорий\n  const handleDeleteCategory = categoryToDelete => {\n    const updateCategoriesRecursively = (cats, categoryId) => {\n      return cats.filter(cat => cat.id !== categoryId) // Удаляем\n      .map(cat => {\n        if (cat.subcategories && cat.subcategories.length > 0) {\n          return {\n            ...cat,\n            subcategories: updateCategoriesRecursively(cat.subcategories, categoryId)\n          };\n        }\n        return cat;\n      });\n    };\n    setCategories(updateCategoriesRecursively(categories, categoryToDelete.id));\n    if (selectedCategory && selectedCategory.id === categoryToDelete.id) {\n      setSelectedCategory(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.adminPanelHeader,\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.addCategoryButton,\n      onClick: () => handleAddSubcategory(null),\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoryListContainer,\n      children: /*#__PURE__*/_jsxDEV(CategoryList, {\n        categories: categories,\n        onCategoryClick: handleCategoryClick,\n        onAddSubcategory: handleAddSubcategory,\n        onDeleteCategory: handleDeleteCategory,\n        level: 0,\n        maxLevels: MAX_CATEGORY_LEVELS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(CategoryEditor, {\n      category: selectedCategory,\n      onSave: handleSaveCategory,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IJAwQWJAGi+S5pWXaW18Gm/csdc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CategoryList","CategoryEditor","styles","jsxDEV","_jsxDEV","MAX_CATEGORY_LEVELS","MAX_CAT_NAME_LENGTH_FOR_GEN","App","_s","categories","setCategories","id","name","subcategories","selectedCategory","setSelectedCategory","handleCategoryClick","category","handleSaveCategory","updatedCategory","updateCategoriesRecursively","cats","map","cat","length","console","log","handleCancelEdit","handleAddSubcategory","parentCategory","generateId","Date","now","generateSubcategoryName","parent","existingSubcategories","nextNumber","baseName","maxTopLevelNum","forEach","match","Math","max","parseInt","parentNamePart","slice","newSubcategory","parentId","handleDeleteCategory","categoryToDelete","categoryId","filter","className","app","children","adminPanelHeader","fileName","_jsxFileName","lineNumber","columnNumber","addCategoryButton","onClick","categoryListContainer","onCategoryClick","onAddSubcategory","onDeleteCategory","level","maxLevels","onSave","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/d2220/PycharmProjects/lectures-collection-bot/admin_project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CategoryList from './components/CategoryList';\nimport CategoryEditor from './components/CategoryEditor';\nimport styles from './components/styles/App.module.css';\n\nconst MAX_CATEGORY_LEVELS = 6;\nconst MAX_CAT_NAME_LENGTH_FOR_GEN = 127;\n\nfunction App() {\n  const [categories, setCategories] = useState([\n    { id: 1, name: 'Category 1', subcategories: [] },\n    { id: 2, name: 'Category 2', subcategories: [] },\n    { id: 3, name: 'Category 3', subcategories: [] },\n  ]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  useEffect(() => {\n    // Здесь будет загрузка данных с сервера (пока используем заглушку)\n    // В будущем заменим на реальный fetch запрос\n  }, []);\n\n  const handleCategoryClick = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleSaveCategory = (updatedCategory) => {\n    const updateCategoriesRecursively = (cats) => {\n      return cats.map((cat) => {\n        if (cat.id === updatedCategory.id) {\n          return updatedCategory; // Меняю старую категорию на обновлённую\n        }\n\n        if (cat.subcategories && cat.subcategories.length > 0) {\n          return { ...cat, subcategories: updateCategoriesRecursively(cat.subcategories) }; // Если у текущей категории уже есть подкатегории, рекурсивно вызываем для них\n        }\n        return cat;\n      });\n    };\n    setCategories(updateCategoriesRecursively(categories)); // Обновляем сост.\n\n    // Сбрасываем выбранную категорию, чтобы скрыть редактор\n    setSelectedCategory(null);\n\n    // TODO: Отправить обновленные данные на сервер (PUT/PATCH запрос)\n    console.log('Updated category:', updatedCategory); // Для отладки\n  };\n\n  const handleCancelEdit = () => {\n    setSelectedCategory(null); // Скрываем редактор, отмена редактирования\n  };\n\n  const handleAddSubcategory = (parentCategory) => {\n    // Генератор ID\n    const generateId = () => Date.now();\n\n    // Функция генерирования имени для новой (под)категории\n    const generateSubcategoryName = (parent, existingSubcategories) => {\n      const nextNumber = existingSubcategories.length + 1;\n      let baseName;\n      if (parent === null) {\n        let maxTopLevelNum = 0;\n        categories.forEach((cat) => {\n          // Проверка совпадает ли имя формату \"Category[число]\"\n          const match = cat.name.match(/^Category (\\d+)$/);\n          if (match) {\n            maxTopLevelNum = Math.max(maxTopLevelNum, parseInt(match[1], 10));\n          }\n        });\n        baseName = `Category ${maxTopLevelNum + 1}`;\n      } else {\n        const parentNamePart = parent.name.slice(0, MAX_CAT_NAME_LENGTH_FOR_GEN - 10);\n        baseName = `${parentNamePart}.${nextNumber}`;\n      }\n      return baseName.slice(0, MAX_CAT_NAME_LENGTH_FOR_GEN);\n    };\n\n    const newSubcategory = {\n      id: generateId(),\n      name: generateSubcategoryName(\n        parentCategory,\n        parentCategory ? parentCategory.subcategories : categories,\n      ),\n      subcategories: [],\n    };\n\n    // Функция рекурсивного обновления состояния категорий\n    const updateCategoriesRecursively = (cats, parentId) => {\n      if (parentId === null) {\n        return [...cats, newSubcategory];\n      }\n      return cats.map((cat) => {\n        // Ищем род. категорию\n        if (cat.id === parentId) {\n          // Нашли род. категорию\n          return { ...cat, subcategories: [...cat.subcategories, newSubcategory] };\n        } else if (cat.subcategories && cat.subcategories.length > 0) {\n          // Если есть подкатегории, рекурсивно ищем в них\n          return {\n            ...cat,\n            subcategories: updateCategoriesRecursively(cat.subcategories, parentId),\n          };\n        }\n        return cat;\n      });\n    };\n\n    if (parentCategory === null) {\n      // если нет ParentCategory, значит добавляем на top-level\n      setCategories(updateCategoriesRecursively(categories, null));\n    } else {\n      // иначе, добавляем как подкатегорию\n      setCategories(updateCategoriesRecursively(categories, parentCategory.id));\n    }\n  };\n\n  // Удаление категорий\n  const handleDeleteCategory = (categoryToDelete) => {\n    const updateCategoriesRecursively = (cats, categoryId) => {\n      return cats\n        .filter((cat) => cat.id !== categoryId) // Удаляем\n        .map((cat) => {\n          if (cat.subcategories && cat.subcategories.length > 0) {\n            return {\n              ...cat,\n              subcategories: updateCategoriesRecursively(cat.subcategories, categoryId),\n            };\n          }\n          return cat;\n        });\n    };\n\n    setCategories(updateCategoriesRecursively(categories, categoryToDelete.id));\n\n    if (selectedCategory && selectedCategory.id === categoryToDelete.id) {\n      setSelectedCategory(null);\n    }\n  };\n\n  return (\n    <div className={styles.app}>\n      <h1 className={styles.adminPanelHeader}>Admin Panel</h1>\n      <button className={styles.addCategoryButton} onClick={() => handleAddSubcategory(null)}>\n        Add Category\n      </button>\n\n      <div className={styles.categoryListContainer}>\n        <CategoryList\n          categories={categories}\n          onCategoryClick={handleCategoryClick}\n          onAddSubcategory={handleAddSubcategory}\n          onDeleteCategory={handleDeleteCategory}\n          level={0}\n          maxLevels={MAX_CATEGORY_LEVELS}\n        />\n      </div>\n\n      {selectedCategory && (\n        <CategoryEditor\n          category={selectedCategory}\n          onSave={handleSaveCategory}\n          onCancel={handleCancelEdit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}